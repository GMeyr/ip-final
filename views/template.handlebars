<!DOCTYPE html>
<html>
  <head>
    <title>handlebars demo</title>
    <script type="text/javascript"
            src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js">
    </script>
    <script type="text/javascript" src="https://github.com/downloads/wycats/handlebars.js/handlebars-1.0.rc.1.min.js">
    </script>
  </head>

  <body>
    <!--header-->
    <h1 class="logo">issueprism</h1>
    <div class="navbar">
      <p><a href="/">Home</a> &nbsp; <a href="/addissue">Add Issue</a></p>
    </div>

    <!--handlebars content-->
    <div id="contentplaceholder"></div>
    <div id="issuelist"></div>
    <script id="Handlebars-Template" type="text/x-handlebars-template">
      <p>Title should be here: {{title}}</p>
      <p>Text should be here: {{text}}</p>
    </script>
    <script type="text/javascript">
      /*failed attempt to use a regex to handle parameters
        from the form on the previous page to decide which
        posts to show*/

      function parseURL
      var str = $("#Handlebars-Template").html();
      var template = Handlebars.compile(str);

      var pathArray = window.location.search;

      var re = new RegExp (/(type=science)/);

      console.log(re.test(pathArray));
      console.log("pathArray is: " + pathArray);
      </script>

      <div class="content">
      </div>
      <script>
      var pathArray = window.location.search;

      check(pathArray, selectionsToObj);


      //helper funtions
      function check(url, callback){
          var reType = new RegExp(/type/);
          var reScope = new RegExp(/scope/);
          if ( (reType.test(url)) && (reScope.test(url)) ){
            console.log("function 'check' successful");
            return callback(url);
          } else return "Type and Scope are not specified";
      }

      function selectionsToObj (url) {
        var results = {};
        var andIndex = url.indexOf('&')
        var newType = url.slice(6, andIndex);
        var newScope = url.slice(andIndex + 7)
        results.type = newType;
        results.scope = newScope;
        console.log("function 'selectionsToObj' successful");
        return requestIssues(results);
      }

      function requestIssues(selectionsObj){
          var viewThis = selectionsObj.type + selectionsObj.scope;
          console.log("requesting isues for " + viewThis)
          var req = new XMLHttpRequest();
          req.open("GET", viewThis, false);
          req.send(null);
          console.log("Got back: " + req.responseText);
          $(document).ready(function(){
            $('#issuelist').html(req.responseText);
          })

      }

      </script>

  </body>
</html>
